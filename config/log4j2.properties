name = COConfig

# Appender configurations

#log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#log4j.appender.stdout.layout.ConversionPattern=[%d] %p %m (%c)%n
appender.stdout.type = Console
appender.stdout.name = STDOUT
appender.stdout.layout.type = PatternLayout
appender.stdout.layout.pattern = [%d] %p %m (%c)%n

#log4j.appender.kafkaAppender=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.kafkaAppender.DatePattern='.'yyyy-MM-dd-HH
#log4j.appender.kafkaAppender.File=${kafka.logs.dir}/server.log
#log4j.appender.kafkaAppender.layout=org.apache.log4j.PatternLayout
#log4j.appender.kafkaAppender.layout.ConversionPattern=[%d] %p %m (%c)%n
appender.kafkaAppender.type = RollingFile
appender.kafkaAppender.name = KAFKA
appender.kafkaAppender.fileName = ${kafka.logs.dir}/server.log
appender.kafkaAppender.filePattern = ${kafka.logs.dir}/server.%d{yyyy-MM-dd-yy-HH}.log
appender.kafkaAppender.policies.type = Policies
appender.kafkaAppender.policies.time.type = TimeBasedTriggeringPolicy
appender.kafkaAppender.policies.time.interval = 24
appender.kafkaAppender.policies.time.modulate = true
appender.kafkaAppender.layout.type = PatternLayout
appender.kafkaAppender.layout.pattern = [%d] %p %m (%c)%n

#log4j.appender.stateChangeAppender=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.stateChangeAppender.DatePattern='.'yyyy-MM-dd-HH
#log4j.appender.stateChangeAppender.File=${kafka.logs.dir}/state-change.log
#log4j.appender.stateChangeAppender.layout=org.apache.log4j.PatternLayout
#log4j.appender.stateChangeAppender.layout.ConversionPattern=[%d] %p %m (%c)%n
appender.stateChangeAppender.type = RollingFile
appender.stateChangeAppender.name = STATE-CHANGE
appender.stateChangeAppender.fileName = ${kafka.logs.dir}/state-change.log
appender.stateChangeAppender.filePattern = ${kafka.logs.dir}/state-change.%d{yyyy-MM-dd-yy-HH}.log
appender.stateChangeAppender.policies.type = Policies
appender.stateChangeAppender.policies.time.type = TimeBasedTriggeringPolicy
appender.stateChangeAppender.policies.time.interval = 24
appender.stateChangeAppender.policies.time.modulate = true
appender.stateChangeAppender.layout.type = PatternLayout
appender.stateChangeAppender.layout.pattern = [%d] %p %m (%c)%n

#log4j.appender.requestAppender=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.requestAppender.DatePattern='.'yyyy-MM-dd-HH
#log4j.appender.requestAppender.File=${kafka.logs.dir}/kafka-request.log
#log4j.appender.requestAppender.layout=org.apache.log4j.PatternLayout
#log4j.appender.requestAppender.layout.ConversionPattern=[%d] %p %m (%c)%n
appender.requestAppender.type = RollingFile
appender.requestAppender.name = REQUEST
appender.requestAppender.fileName = ${kafka.logs.dir}/kafka-request.log
appender.requestAppender.filePattern = ${kafka.logs.dir}/kafka-request.%d{yyyy-MM-dd-yy-HH}.log
appender.requestAppender.policies.type = Policies
appender.requestAppender.policies.time.type = TimeBasedTriggeringPolicy
appender.requestAppender.policies.time.interval = 24
appender.requestAppender.policies.time.modulate = true
appender.requestAppender.layout.type = PatternLayout
appender.requestAppender.layout.pattern = [%d] %p %m (%c)%n


#log4j.appender.cleanerAppender=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.cleanerAppender.DatePattern='.'yyyy-MM-dd-HH
#log4j.appender.cleanerAppender.File=${kafka.logs.dir}/log-cleaner.log
#log4j.appender.cleanerAppender.layout=org.apache.log4j.PatternLayout
#log4j.appender.cleanerAppender.layout.ConversionPattern=[%d] %p %m (%c)%n
appender.cleanerAppender.type = RollingFile
appender.cleanerAppender.name = CLEANER
appender.cleanerAppender.fileName = ${kafka.logs.dir}/log-cleaner.log
appender.cleanerAppender.filePattern = ${kafka.logs.dir}/log-cleaner.%d{yyyy-MM-dd-yy-HH}.log
appender.cleanerAppender.policies.type = Policies
appender.cleanerAppender.policies.time.type = TimeBasedTriggeringPolicy
appender.cleanerAppender.policies.time.interval = 24
appender.cleanerAppender.policies.time.modulate = true
appender.cleanerAppender.layout.type = PatternLayout
appender.cleanerAppender.layout.pattern = [%d] %p %m (%c)%n

#log4j.appender.controllerAppender=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.controllerAppender.DatePattern='.'yyyy-MM-dd-HH
#log4j.appender.controllerAppender.File=${kafka.logs.dir}/controller.log
#log4j.appender.controllerAppender.layout=org.apache.log4j.PatternLayout
#log4j.appender.controllerAppender.layout.ConversionPattern=[%d] %p %m (%c)%n
appender.controllerAppender.type = RollingFile
appender.controllerAppender.name = CONTROLLER
appender.controllerAppender.fileName = ${kafka.logs.dir}/controller.log
appender.controllerAppender.filePattern = ${kafka.logs.dir}/controller.%d{yyyy-MM-dd-yy-HH}.log
appender.controllerAppender.policies.type = Policies
appender.controllerAppender.policies.time.type = TimeBasedTriggeringPolicy
appender.controllerAppender.policies.time.interval = 24
appender.controllerAppender.policies.time.modulate = true
appender.controllerAppender.layout.type = PatternLayout
appender.controllerAppender.layout.pattern = [%d] %p %m (%c)%n

#log4j.appender.authorizerAppender=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.authorizerAppender.DatePattern='.'yyyy-MM-dd-HH
#log4j.appender.authorizerAppender.File=${kafka.logs.dir}/kafka-authorizer.log
#log4j.appender.authorizerAppender.layout=org.apache.log4j.PatternLayout
#log4j.appender.authorizerAppender.layout.ConversionPattern=[%d] %p %m (%c)%n
appender.authorizerAppender.type = RollingFile
appender.authorizerAppender.name = AUTHORIZER
appender.authorizerAppender.fileName = ${kafka.logs.dir}/ckafka-authorizer.log
appender.authorizerAppender.filePattern = ${kafka.logs.dir}/kafka-authorizer.%d{yyyy-MM-dd-yy-HH}.log
appender.authorizerAppender.policies.type = Policies
appender.authorizerAppender.policies.time.type = TimeBasedTriggeringPolicy
appender.authorizerAppender.policies.time.interval = 24
appender.authorizerAppender.policies.time.modulate = true
appender.authorizerAppender.layout.type = PatternLayout
appender.authorizerAppender.layout.pattern = [%d] %p %m (%c)%n


# Logger configurations

#log4j.rootLogger=INFO, stdout, kafkaAppender
rootLogger.level = INFO
rootLogger.appenderRefs = stdout, kafkaAppender
rootLogger.appenderRef.stdout.ref = STDOUT
rootLogger.additivity = false

# Change the line below to adjust ZK client logging
#log4j.logger.org.apache.zookeeper=INFO
logger.zookeeper.name = org.apache.zookeeper
logger.zookeeper.level = INFO
#logger.zookeeper.additivity = false

## Change the two lines below to adjust the general broker logging level (output to server.log and stdout)
#log4j.logger.kafka=INFO
#log4j.logger.org.apache.kafka=INFO
logger.broker.name = kafka
logger.broker.level = INFO

logger.kafka.name = org.apache.kafka
logger.kafka.level = INFO

## Change to DEBUG or TRACE to enable request logging
#log4j.logger.kafka.request.logger=WARN, requestAppender
#log4j.additivity.kafka.request.logger=false
logger.request.name = kafka.request.logger
logger.request.level = WARN
logger.request.appenderRefs = requestAppender
logger.request.additivity = false

## Uncomment the lines below and change log4j.logger.kafka.network.RequestChannel$ to TRACE for additional output
## related to the handling of requests
##log4j.logger.kafka.network.Processor=TRACE, requestAppender
##log4j.logger.kafka.server.KafkaApis=TRACE, requestAppender
##log4j.additivity.kafka.server.KafkaApis=false
#log4j.logger.kafka.network.RequestChannel$=WARN, requestAppender
#log4j.additivity.kafka.network.RequestChannel$=false

#logger.network.name = kafka.network.Processor
#logger.network.level = TRACE
#logger.network.appenderRefs = requestAppender
#logger.network.additivity = false
#logger.apis.name = kafka.server.KafkaApis
#logger.apis.level = TRACE
#logger.apis.appenderRefs = requestAppender
#logger.apis.additivity = false

#log4j.logger.kafka.network.RequestChannel$=WARN, requestAppender
#log4j.additivity.kafka.network.RequestChannel$=false
logger.requestChannel.name = kafka.network.RequestChannel$
logger.requestChannel.level = WARN
logger.requestChannel.appenderRefs = requestAppender
logger.requestChannel.additivity = false


#log4j.logger.kafka.controller=TRACE, controllerAppender
#log4j.additivity.kafka.controller=false
logger.controller.name = kafka.controller
logger.controller.level = TRACE
logger.controller.appenderRefs = controllerAppender
logger.controller.additivity = false

#log4j.logger.kafka.log.LogCleaner=INFO, cleanerAppender
#log4j.additivity.kafka.log.LogCleaner=false
logger.cleaner.name = kafka.log.LogCleaner
logger.cleaner.level = INFO
logger.cleaner.appenderRefs = cleanerAppender
logger.cleaner.additivity = false


#log4j.logger.state.change.logger=TRACE, stateChangeAppender
#log4j.additivity.state.change.logger=false
logger.state.name = state.change.logger
logger.state.level = TRACE
logger.state.appenderRefs = stateChangeAppender
logger.state.additivity = false

## Access denials are logged at INFO level, change to DEBUG to also log allowed accesses
#log4j.logger.kafka.authorizer.logger=INFO, authorizerAppender
#log4j.additivity.kafka.authorizer.logger=false
logger.authorizer.name = kafka.authorizer.logger
logger.authorizer.level = INFO
logger.authorizer.appenderRefs = authorizerAppender
logger.authorizer.additivity = false

## Strimzi
## Kafka AdminClient logging is a bit noisy at INFO level
#logger.kafka.name = org.apache.kafka
#logger.kafka.level = ${env:STRIMZI_AC_LOG_LEVEL:-WARN}
#logger.kafka.additivity = false
#
## Zookeeper is very verbose even on INFO level -> We set it to WARN by default
#logger.zookeepertrustmanager.name = org.apache.zookeeper
#logger.zookeepertrustmanager.level = ${env:STRIMZI_ZOOKEEPER_LOG_LEVEL:-WARN}
#logger.zookeepertrustmanager.additivity = false